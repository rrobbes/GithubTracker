time,project,user,type,url,title,body,assigned,branch,branch_link,merge,add,del
2016-04-07 16:31:52,TeraCity,Andres Ferrada,comment,https://github.com/TeraCityCC4401/TeraCity/issues/1#issuecomment-206982365,,link a la wiki del articulo https://github.com/TeraCityCC4401/TeraCity/wiki/Dynamic-Textures-%5BNOT-YET-COMPLETE%5D,,,,,,
2016-04-05 15:46:57,TeraCity,Franco Sepulveda,comment,https://github.com/TeraCityCC4401/TeraCity/issues/1#issuecomment-205864929,,Hasta el momento; la elección de textura posee cierta cantidad de imágenes con distintos anchos de línea; y el programa escoge la que 'más se asemeje' al largo de las líneas de código.      Lo que se solicita es poder calcular el largo de las líneas de código y generar una textura correspondiente a esto al cargar el programa.,,,,,,
2016-04-05 15:44:23,TeraCity,Franco Sepulveda,comment,https://github.com/TeraCityCC4401/TeraCity/issues/2#issuecomment-205864112,,Aclaración: No se requiere que los cubos puedan cambiar de tamaño; sino que éstos se puedan unir para permitir que los edificios posean un ancho mayor.,,,,,,
2016-04-13 19:47:56,TeraCity,Juan Rojas,comment,https://github.com/TeraCityCC4401/TeraCity/issues/1#issuecomment-209619285,,http://docs.oracle.com/javase/tutorial/2d/      Tal vez la librería de gráficos 2D de Java puede ayudar a generar las imágenes del texto,,,,,,
2016-04-05 15:37:18,TeraCity,Juan Rojas,issue,https://github.com/TeraCityCC4401/TeraCity/issues/1,Implementar texturas dinámicas,Terasology usa texturas almacenadas en archivos. Esto no funciona bien por el caso de TeraCity;      que necesita generar texturas dinámicamente (e.q. para colores de metricas; outline del codigo).      Se requiere implementar texturas dinámicas; y un tipo de bloque que usa esas texturas. Esto es      base para otras extensiones.,HuanRE,,,,,
2016-05-05 17:26:21,mochadoom,Braulio Lopez,comment,https://github.com/njara/mochadoom/issues/2#issuecomment-217217353,,**Prefactoring**            Para ello se creó un método getZombieSpawnTime la cual retorna el tiempo para el cual se demora en aparecer el zombie creado. a7f36d34d0c4a8995a25f91b7402ba032cb600c1,,,,,,
2016-04-13 18:29:00,mochadoom,Braulio Lopez,comment,https://github.com/njara/mochadoom/issues/1#issuecomment-209582454,,Se cerró porque ya estaba includa en otra issue,,,,,,
2016-04-07 15:53:18,mochadoom,Braulio Lopez,issue,https://github.com/njara/mochadoom/issues/1,RS0?? - Agregar Cheatcodes nuevos,En el juego ya existen cheatcodes; entonces solo queda implementar los nuevos:                  ,elbraulio,,,,,
2016-05-26 16:55:08,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/2#issuecomment-221930153,,**Conclusion**            Los monstruos se transforman en zombies una vez que pierden toda su vida.,,,,,,
2016-05-26 16:54:17,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/2#issuecomment-221929937,,**Postfactoring**            Ahora los zombies son clases por separado; llamadas GreenZombie_t;RedZombie_t;GrayZombie_t;BlackZombie_t. Se arreglo bug de que dos monstruos pueden aparecer en la misma posición; usando el método CheckPosition. ,,,,,,
2016-05-05 18:14:34,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/2#issuecomment-217230881,,**Verification**            Al tener muchos objetos zombies el juego deja de funcionar correctamente por lo que necesita **postfactoring** con respecto a los Threads creados.,,,,,,
2016-05-05 18:12:31,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/2#issuecomment-217230369,,**Change Propagation**            La única clase impactada fue Actions.      ,,,,,,
2016-05-04 13:13:47,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/2#issuecomment-216858298,,**Prefactoring**            En la clase Actions al momento de morir en la función KillMobj se efectúa la creación de los zombies mediante un nuevo método llamada SpawnZombieMobj la cual efectúa que el zombie sea el zombie del monstruo elimininado y posteriormente elimina el cuerpo del monstruo anterior. Este le asigna los sprites adecuados y las info. (Programado por Joaquín)            Para la asignación de la probabildad según una función de pesos llamada getZombieWeigth la cual retorna el peso de la probabilidad que tiene el color de ser asignado a un zombie. Posteriormente el método getRandomZombieType usa esos pesos para sacar aleatoriamente el tipo de zombie al cual se asignará esta retorna el tipo de zombie elegido. (Programado por Braulio),,,,,,
2016-05-04 13:04:19,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/2#issuecomment-216855893,,**Impact Analysis**            Análisis con JRipples.      Clases que se podrían ver impactadas:            - Actions      - mobj_t      - DoomContext      - UnifiedGameMap      - AbstractLevelLoader      - player_t      - DoomMain      - ActionsFunctions      - VanillaDSG      - SlideDoor,,,,,,
2016-05-04 13:03:38,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/2#issuecomment-216855727,,**Concept Location**            Monsters; Zombie; Kill; GameSkill.,,,,,,
2016-05-04 13:02:54,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/2#issuecomment-216855549,,**Initialization**            Los enemigos al morir deben transformarse en un zombie. El zombie al cual reviven depende de una probabilidad la cual depende de la dificultad.,,,,,,
2016-05-04 11:22:54,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/4#issuecomment-216832530,,**Conclusion**            Se agregaron los zombies de colores como tipos de objetos.,,,,,,
2016-05-04 11:22:15,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/4#issuecomment-216832422,,**Verification**            Funciona la implementación. No necesita **postfatoring**.,,,,,,
2016-05-04 11:22:06,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/4#issuecomment-216832385,,**Change Propagation**            Clases impactadas info; mobjtype_t.,,,,,,
2016-05-04 11:21:57,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/4#issuecomment-216832358,,**Prefactoring**            En la clase info se encuentra un arreglo con todos los objetos del juego. Aquí agregamos los 4 tipos de zombies. En la clase mobjtype_t se agregaron los tipos MT_REDZOMBIE; MT_GREENZOMBIE; MT_GRAYZOMBIE; MT_BLACKZOMBIE.,,,,,,
2016-05-04 11:20:39,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/4#issuecomment-216832139,,**Impact Analysis**            Análisis con JRipples.      Clases que se podrían ver impactadas:            - info      - mobjtype_t      - state_t      - VanillaDSG      - Actions      - ActionsFunctions      - castinfo_t      - VisSprites      - mobj_t      - DoomMain      - UnifiedGameMap      - Limits,,,,,,
2016-05-04 11:19:58,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/4#issuecomment-216832037,,**Concept Location**            Color; Monster; Object.,,,,,,
2016-05-04 11:19:19,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/4#issuecomment-216831940,,**Initialization**            Existen 4 tipos de zombies: Rojo; Verde; Gris y Negro.,,,,,,
2016-05-03 16:25:54,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/3#issuecomment-216584733,,**Conclusion**            Se agregaron los zombies como tipos de objetos.,,,,,,
2016-05-03 16:25:25,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/3#issuecomment-216584561,,**Verification**            Funciona la implementación. No necesita postfatoring.,,,,,,
2016-05-03 16:24:47,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/3#issuecomment-216584383,,**Change Propagation**            Clases impactadas info; mobjtype_t.,,,,,,
2016-05-03 16:24:11,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/3#issuecomment-216584187,,**Prefactoring**            En la clase info se encuentra un arreglo con todos los objetos del juego. Aquí agregamos los 4 tipos de zombies. También se agregó los tipos a la clase mobjtype_t la cual apunta al arreglo antes mencionado.,,,,,,
2016-05-03 16:14:34,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/3#issuecomment-216581189,,**Impact Analysis**            Análisis con JRipples.      Clases que se podrían ver impactadas:            - info      - mobjtype_t      - state_t      - VanillaDSG      - Actions      - ActionsFunctions      - castinfo_t      - VisSprites      - mobj_t      - DoomMain      - UnifiedGameMap      - Limits      - Finale,,,,,,
2016-05-03 16:12:58,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/3#issuecomment-216580371,,**Concept Location**            Object; Monster.,,,,,,
2016-05-03 16:10:53,mochadoom,Joaquin Torres,comment,https://github.com/njara/mochadoom/issues/3#issuecomment-216579743,,**Initialization**            Agregar zombie a los objetos dentro de mochadoom.,,,,,,
2016-04-07 15:53:25,mochadoom,Joaquin Torres,issue,https://github.com/njara/mochadoom/issues/2,RS01 - Transformación Enemigo Zombie,- Descripción: El jugador y los monstruos tienen un mecanismo de transformación                             a zombie el cual se determina de acuerdo a la                             probabilidad asignada dependiendo de la dificultad.        - Fuente: Analista.        - Prioridad: Crítica.        - Estabilidad: Intransable.        - Fecha Actualización: 4/7/2016 12:12        - Estado: Cumple.        - Incremento: 0        - Tipo: Funcional.        - Usuario Asociado: Usuario de la aplicación.              Requisitos de Usuario asociados      [RU01 - Jugador/Enemigo Transformación Zombie](https://github.com/njara/mochadoom/wiki/Requisitos-de-Usuario#ru01---jugadorenemigo-transformaci%C3%B3n-zombie)            - [x] Initialization        - [x] Concept Location        - [x] Impact Analysis        - [x] Prefactoring        - [x] Change Propagation        - [x] Verification        - [x] Postfactoring        - [x] Conclusion  ,juakotorres,,,,,
2016-04-07 16:11:27,mochadoom,Joaquin Torres,issue,https://github.com/njara/mochadoom/issues/3,RS02 - Zombie.,- Descripción: Existencia de Zombies con diferentes características.      - Fuente: Analista.        - Prioridad: Crítica.        - Estabilidad: Intransable.        - Fecha Actualización: 4/12/2016 12:12        - Estado: Cumple.        - Incremento: 0        - Tipo: Funcional.        - Usuario Asociado: Usuario de la aplicación.              Requisitos de Usuario asociados      [RU02 - Tipos de Zombie](https://github.com/njara/mochadoom/wiki/Requisitos-de-Usuario#ru02---tipos-zombie)            - [x] Initialization        - [x] Concept Location        - [x] Impact Analysis        - [x] Prefactoring        - [x] Change Propagation        - [x] Verification        - [x] Postfactoring        - [x] Conclusion  ,juakotorres,,,,,
2016-04-12 15:13:31,mochadoom,Joaquin Torres,issue,https://github.com/njara/mochadoom/issues/4,RS03 - Color Zombie,- Descripción: Existen cuatro colores de zombie: Verde; Rojo; Gris       y Negro.      - Fuente: Analista.        - Prioridad: Crítica.        - Estabilidad: Intransable.        - Fecha Actualización: 4/12/2016 12:12        - Estado: Cumple.        - Incremento: 0        - Tipo: Funcional.        - Usuario Asociado: Usuario de la aplicación.              Requisitos de Usuario asociados      [RU02 - Tipos de Zombie](https://github.com/njara/mochadoom/wiki/Requisitos-de-Usuario#ru02---tipos-zombie)            - [x] Initialization        - [x] Concept Location        - [x] Impact Analysis        - [x] Prefactoring        - [x] Change Propagation        - [x] Verification        - [x] Postfactoring        - [x] Conclusion  ,juakotorres,,,,,
2016-05-10 03:28:33,jswingripples,Cristian Guzman,comment,https://github.com/jSwingRipples/jswingripples/issues/3#issuecomment-218050283,,## Initialization            Se ha de crear un plug-in de Eclipse desde el cual sea posible lanzar la aplicación.            ## Concept Location            Plug-in; eclipse; launch.            ## Impact Analysis            Ninguna clase de JSwingRipples se verá afectada; ya que esto corresponde a la creación de un plug-in aparte.            ## Prefactoring            Creación de un repositorio para la creación del plug-in.            ## Actualization            - Se instala software para el desarrollo de plug-ins para Eclipse (PDE)      - Se crea un nuevo menú y botón de selección para la UI de Eclipse; con una pequeña ventana de pop-up como placeholder de la funcionalidad.      - La funcionalidad es agregada; en donde luego de hacer click en el botón en la barra de herramientas; o clickear "Open JSwingRipples" en el menú "JSwingRipples" en la barra menú; se abré la aplicación en su estado inicial.      - Se modifica de forma de cambiar el nombre y tooltips de algunos menús.            ## PostFactoring            - Se descargan un par de .jar que son necesarios para el funcionamiento correcto del código creado.            ## Conclusion            Una vez instalado el plug-in; el usuario es capaz de abrir la aplicación JSwingRipples desde la interfaz de Eclipse.,,,,,,
2016-05-10 00:56:14,jswingripples,Cristian Guzman,comment,https://github.com/jSwingRipples/jswingripples/issues/3#issuecomment-218031857,,- Descripción: Desarrollar plug-in que permita abrir la aplicación desde Eclipse.      - Fuente: Analista.      - Prioridad: Crítico.      - Estabilidad: Intransable.      - Fecha Actualización: 27/05/2016      - Estado: Cumple      - Incremento:      - Tipo: Funcional.      - Ususario Asociado: End-User.            Requisitos de Usuario Asociados:      - [RU0002 - Desarrollar plugins de integración liviana con IDEs](https://github.com/jSwingRipples/jswingripples/wiki/RU0002),,,,,,
2016-04-19 14:35:20,jswingripples,Cristian Guzman,issue,https://github.com/jSwingRipples/jswingripples/issues/3,RS0002.1.1 Crear lanzador de app desde Eclipse,,cguzmanp,,,,,
2016-04-19 14:33:25,jswingripples,Emilio Aburto,issue,https://github.com/jSwingRipples/jswingripples/issues/2,RS0001.2 Visualización específica de dependencias.,,emilio-aburto,,,,,
2016-05-10 14:11:32,jswingripples,Manuel Olguin,comment,https://github.com/jSwingRipples/jswingripples/issues/1#issuecomment-218169419,,Visualización general lista. Falta mejorar grafo; implementar interacciones con el usuario.,,,,,,
2016-04-19 14:32:53,jswingripples,Manuel Olguin,issue,https://github.com/jSwingRipples/jswingripples/issues/1,RS0001.1 Visualización general del impacto mediante un grafo.,,molguin92,,,,,
2016-05-31 22:22:39,jswingripples,Mario Garrido,comment,https://github.com/jSwingRipples/jswingripples/issues/2#issuecomment-222839356,,      [small-graph.zip](https://github.com/jSwingRipples/jswingripples/files/292292/small-graph.zip)            Código de prueba que genera éste grafo:            <img width="822" alt="111" src="https://cloud.githubusercontent.com/assets/7969230/15692470/7cd797a8-2743-11e6-8e22-90bc97f1c0a1.png">      ,,,,,,
2016-08-09 16:03:02,jswingripples,Victor Molina,comment,https://github.com/jSwingRipples/jswingripples/issues/4#issuecomment-238601534,,Closed with https://github.com/jSwingRipples/netBeansPlugin/pull/1,,,,,,
2016-06-06 14:27:57,jswingripples,Victor Molina,comment,https://github.com/jSwingRipples/jswingripples/issues/4#issuecomment-223975310,,## Initialization            Lanzar desde NetBeans jSwingRipples            ## Concept Location            Plug-in; NetBeans; parameter; file.            ## Impact Analysis            Ninguna clase de JSwingRipples se verá afectada.            ## Prefactoring            ## Actualization      Limpieza de código sistemática            ## PostFactoring            ## Conclusion,,,,,,
2016-04-19 14:35:41,jswingripples,Victor Molina,issue,https://github.com/jSwingRipples/jswingripples/issues/4,RS0002.1.2 Crear lanzador de app desde NetBeans,- Descripción: Desarrollar plug-in que permita abrir la aplicación desde Eclipse.      - Fuente: Analista.      - Prioridad: Crítico.      - Estabilidad: Intransable.      - Fecha Actualización: 06/06/2016      - Estado: Cumple      - Incremento:      - Tipo: Funcional.      - Ususario Asociado: End-User.            Requisitos de Usuario Asociados:      - [RU0002 - Desarrollar plugins de integración liviana con IDEs](https://github.com/jSwingRipples/jswingripples/wiki/RU0002),noahmelto,,,,,
2016-04-17 15:56:28,logisim,Javier Diaz,comment,https://github.com/IsmaelAlvarez/logisim/issues/4#issuecomment-211047142,,Cada chip tiene en su RS la condición de que se debe quemar a un voltaje alto; por lo tanto quité esa parte de este requisito.,,,,,,
2016-08-04 16:50:15,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/3#issuecomment-237613353,,**Change Propagation**      Se realizó el cambio sin problemas.,,,,,,
2016-08-04 16:48:24,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/3#issuecomment-237612840,,**Prefactoring**      Se utilizara la Interfaz AnalogSimulator para crear un nuevo Simulator que verifique si los componentes del circuito se quemarán o no.      En AnalogComponent se creará un método que permita cambiar el estado de los componentes.,,,,,,
2016-08-04 16:42:46,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/3#issuecomment-237611250,,**Impact Analysis**      TODO,,,,,,
2016-08-04 16:42:32,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/3#issuecomment-237611200,,**Concept Location**      AnalogSimulator      AnalogComponent      ,,,,,,
2016-08-04 16:40:28,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/3#issuecomment-237610581,,**Initialization**      Se debe agregar un modo en el cuál se evalúe el circuito y muestre las piezas que presentan problemas y se quemarán.,,,,,,
2016-08-04 16:37:46,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/4#issuecomment-237609818,,**Change Propagation**      Se realizó le cambio en Resistor; y en Io. TODO Led,,,,,,
2016-08-04 16:37:02,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/4#issuecomment-237609603,,**Prefactoring**      En las clases Resistor y Led se agregara un atributo que muestre el estado del componente.      En Io se agregará el atributo.      ,,,,,,
2016-08-04 16:30:24,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/4#issuecomment-237607845,,**Impact Analysis**      TODO,,,,,,
2016-08-04 16:27:15,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/4#issuecomment-237606942,,**Concept Location**      Resistor      Led      Io,,,,,,
2016-08-04 16:23:03,logisim,Nicolas Caracci,comment,https://github.com/IsmaelAlvarez/logisim/issues/4#issuecomment-237605760,,**Initialization**      Los leds y resistencias deben tener un voltaje máximo con el cuál pueden trabajar y deben quemarse en caso de recibir un voltaje mayor.,,,,,,
2016-08-02 16:56:40,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/2#issuecomment-236968988,,**Postfactoring**      No se encontraron errores,,,,,,
2016-08-02 16:56:25,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/2#issuecomment-236968886,,**Verification**      Se probo el programa y todo sigue funcionando correctamente.,,,,,,
2016-08-02 16:55:57,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/2#issuecomment-236968735,,**Change Propagation**      Se realizo el cambio,,,,,,
2016-08-02 16:55:36,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/2#issuecomment-236968642,,**Prefactoring**      Se implementará un grafo que irá añadiendo todas las conexiones. Luego se agregará una función que recorra el grafo y calcule resistencia equivalente entre 2 puntos del circuito. Para resistencia en serie es simplemente sumarlas y ver que el circuito este cerrado y con una fuente de voltage conectada.            Se creará una clase tipo singleton llamada AllComponents; en esta se ira agregando cada componente que el usuario añade. Así se ira generando el grafo.,,,,,,
2016-08-02 16:53:33,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/2#issuecomment-236968016,,**Impact Analysis**      TODO,,,,,,
2016-08-02 16:53:21,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/2#issuecomment-236967949,,**Concept Location**      protosim.components.VoltageGenerator; protosim.components.Resistor; logisim.comp.Component; logisim.std.io.Io,,,,,,
2016-08-02 16:52:03,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/2#issuecomment-236967560,,**Initialization**      Se debe poder generar un circuito con varias resistencia en serie y que estas se sumen correctamente.,,,,,,
2016-08-02 16:29:26,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/1#issuecomment-236960869,,**Postfactoring**      No se encontraron errores,,,,,,
2016-08-02 16:29:02,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/1#issuecomment-236960739,,**Verification**      Se probo el programa y todo sigue funcionando correctamente.,,,,,,
2016-08-02 16:28:16,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/1#issuecomment-236960540,,**Change Propagation**      Se realizo el cambio sin problemas,,,,,,
2016-08-02 16:23:41,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/1#issuecomment-236959159,,**Prefactoring**      En la clase Voltage: Se agregan todas las opciones de valores entre 4-20. Luego se agrega como atributo el valor del voltage; este se recibe en el constructor y se crea un método getVoltage que entrega este valor.            En la clase VoltageGenerator: Se setea que por defecto venga el voltage de 5 desde el constructor. En el método instanceAttributeChanged; se incluye que se cambie el voltage cuando este es cambiado por el user.,,,,,,
2016-08-02 16:18:56,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/1#issuecomment-236957648,,**Impact Analysis**      TODO,,,,,,
2016-08-02 16:17:51,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/1#issuecomment-236957333,,**Concept Location**      protosim.components.VoltageGenerator; logisim.data.Voltage,,,,,,
2016-08-02 16:16:59,logisim,Vicente Rotman,comment,https://github.com/IsmaelAlvarez/logisim/issues/1#issuecomment-236957071,,**Initialization**      Se pondrá un selector que dará todas las opciones de valores enteros entre 4 y 20 volts. Por defecto estará seleccionado el 5.,,,,,,
